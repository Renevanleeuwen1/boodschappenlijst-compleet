{"ast":null,"code":"// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { buildHeaders } from \"../../../internal/headers.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\n/**\r\n * @deprecated The Assistants API is deprecated in favor of the Responses API\r\n */\nexport class Messages extends APIResource {\n  /**\r\n   * Create a message.\r\n   *\r\n   * @deprecated The Assistants API is deprecated in favor of the Responses API\r\n   */\n  create(threadID, body, options) {\n    return this._client.post(path`/threads/${threadID}/messages`, {\n      body,\n      ...options,\n      headers: buildHeaders([{\n        'OpenAI-Beta': 'assistants=v2'\n      }, options?.headers])\n    });\n  }\n  /**\r\n   * Retrieve a message.\r\n   *\r\n   * @deprecated The Assistants API is deprecated in favor of the Responses API\r\n   */\n  retrieve(messageID, params, options) {\n    const {\n      thread_id\n    } = params;\n    return this._client.get(path`/threads/${thread_id}/messages/${messageID}`, {\n      ...options,\n      headers: buildHeaders([{\n        'OpenAI-Beta': 'assistants=v2'\n      }, options?.headers])\n    });\n  }\n  /**\r\n   * Modifies a message.\r\n   *\r\n   * @deprecated The Assistants API is deprecated in favor of the Responses API\r\n   */\n  update(messageID, params, options) {\n    const {\n      thread_id,\n      ...body\n    } = params;\n    return this._client.post(path`/threads/${thread_id}/messages/${messageID}`, {\n      body,\n      ...options,\n      headers: buildHeaders([{\n        'OpenAI-Beta': 'assistants=v2'\n      }, options?.headers])\n    });\n  }\n  /**\r\n   * Returns a list of messages for a given thread.\r\n   *\r\n   * @deprecated The Assistants API is deprecated in favor of the Responses API\r\n   */\n  list(threadID, query = {}, options) {\n    return this._client.getAPIList(path`/threads/${threadID}/messages`, CursorPage, {\n      query,\n      ...options,\n      headers: buildHeaders([{\n        'OpenAI-Beta': 'assistants=v2'\n      }, options?.headers])\n    });\n  }\n  /**\r\n   * Deletes a message.\r\n   *\r\n   * @deprecated The Assistants API is deprecated in favor of the Responses API\r\n   */\n  delete(messageID, params, options) {\n    const {\n      thread_id\n    } = params;\n    return this._client.delete(path`/threads/${thread_id}/messages/${messageID}`, {\n      ...options,\n      headers: buildHeaders([{\n        'OpenAI-Beta': 'assistants=v2'\n      }, options?.headers])\n    });\n  }\n}","map":{"version":3,"names":["APIResource","CursorPage","buildHeaders","path","Messages","create","threadID","body","options","_client","post","headers","retrieve","messageID","params","thread_id","get","update","list","query","getAPIList","delete"],"sources":["C:\\boodschappenlijst\\boodschappenlijst-nieuw\\node_modules\\openai\\src\\resources\\beta\\threads\\messages.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\r\n\r\nimport { APIResource } from '../../../core/resource';\r\nimport * as Shared from '../../shared';\r\nimport * as AssistantsAPI from '../assistants';\r\nimport { APIPromise } from '../../../core/api-promise';\r\nimport { CursorPage, type CursorPageParams, PagePromise } from '../../../core/pagination';\r\nimport { buildHeaders } from '../../../internal/headers';\r\nimport { RequestOptions } from '../../../internal/request-options';\r\nimport { path } from '../../../internal/utils/path';\r\n\r\n/**\r\n * @deprecated The Assistants API is deprecated in favor of the Responses API\r\n */\r\nexport class Messages extends APIResource {\r\n  /**\r\n   * Create a message.\r\n   *\r\n   * @deprecated The Assistants API is deprecated in favor of the Responses API\r\n   */\r\n  create(threadID: string, body: MessageCreateParams, options?: RequestOptions): APIPromise<Message> {\r\n    return this._client.post(path`/threads/${threadID}/messages`, {\r\n      body,\r\n      ...options,\r\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Retrieve a message.\r\n   *\r\n   * @deprecated The Assistants API is deprecated in favor of the Responses API\r\n   */\r\n  retrieve(messageID: string, params: MessageRetrieveParams, options?: RequestOptions): APIPromise<Message> {\r\n    const { thread_id } = params;\r\n    return this._client.get(path`/threads/${thread_id}/messages/${messageID}`, {\r\n      ...options,\r\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Modifies a message.\r\n   *\r\n   * @deprecated The Assistants API is deprecated in favor of the Responses API\r\n   */\r\n  update(messageID: string, params: MessageUpdateParams, options?: RequestOptions): APIPromise<Message> {\r\n    const { thread_id, ...body } = params;\r\n    return this._client.post(path`/threads/${thread_id}/messages/${messageID}`, {\r\n      body,\r\n      ...options,\r\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns a list of messages for a given thread.\r\n   *\r\n   * @deprecated The Assistants API is deprecated in favor of the Responses API\r\n   */\r\n  list(\r\n    threadID: string,\r\n    query: MessageListParams | null | undefined = {},\r\n    options?: RequestOptions,\r\n  ): PagePromise<MessagesPage, Message> {\r\n    return this._client.getAPIList(path`/threads/${threadID}/messages`, CursorPage<Message>, {\r\n      query,\r\n      ...options,\r\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Deletes a message.\r\n   *\r\n   * @deprecated The Assistants API is deprecated in favor of the Responses API\r\n   */\r\n  delete(\r\n    messageID: string,\r\n    params: MessageDeleteParams,\r\n    options?: RequestOptions,\r\n  ): APIPromise<MessageDeleted> {\r\n    const { thread_id } = params;\r\n    return this._client.delete(path`/threads/${thread_id}/messages/${messageID}`, {\r\n      ...options,\r\n      headers: buildHeaders([{ 'OpenAI-Beta': 'assistants=v2' }, options?.headers]),\r\n    });\r\n  }\r\n}\r\n\r\nexport type MessagesPage = CursorPage<Message>;\r\n\r\n/**\r\n * A citation within the message that points to a specific quote from a specific\r\n * File associated with the assistant or the message. Generated when the assistant\r\n * uses the \"file_search\" tool to search files.\r\n */\r\nexport type Annotation = FileCitationAnnotation | FilePathAnnotation;\r\n\r\n/**\r\n * A citation within the message that points to a specific quote from a specific\r\n * File associated with the assistant or the message. Generated when the assistant\r\n * uses the \"file_search\" tool to search files.\r\n */\r\nexport type AnnotationDelta = FileCitationDeltaAnnotation | FilePathDeltaAnnotation;\r\n\r\n/**\r\n * A citation within the message that points to a specific quote from a specific\r\n * File associated with the assistant or the message. Generated when the assistant\r\n * uses the \"file_search\" tool to search files.\r\n */\r\nexport interface FileCitationAnnotation {\r\n  end_index: number;\r\n\r\n  file_citation: FileCitationAnnotation.FileCitation;\r\n\r\n  start_index: number;\r\n\r\n  /**\r\n   * The text in the message content that needs to be replaced.\r\n   */\r\n  text: string;\r\n\r\n  /**\r\n   * Always `file_citation`.\r\n   */\r\n  type: 'file_citation';\r\n}\r\n\r\nexport namespace FileCitationAnnotation {\r\n  export interface FileCitation {\r\n    /**\r\n     * The ID of the specific File the citation is from.\r\n     */\r\n    file_id: string;\r\n  }\r\n}\r\n\r\n/**\r\n * A citation within the message that points to a specific quote from a specific\r\n * File associated with the assistant or the message. Generated when the assistant\r\n * uses the \"file_search\" tool to search files.\r\n */\r\nexport interface FileCitationDeltaAnnotation {\r\n  /**\r\n   * The index of the annotation in the text content part.\r\n   */\r\n  index: number;\r\n\r\n  /**\r\n   * Always `file_citation`.\r\n   */\r\n  type: 'file_citation';\r\n\r\n  end_index?: number;\r\n\r\n  file_citation?: FileCitationDeltaAnnotation.FileCitation;\r\n\r\n  start_index?: number;\r\n\r\n  /**\r\n   * The text in the message content that needs to be replaced.\r\n   */\r\n  text?: string;\r\n}\r\n\r\nexport namespace FileCitationDeltaAnnotation {\r\n  export interface FileCitation {\r\n    /**\r\n     * The ID of the specific File the citation is from.\r\n     */\r\n    file_id?: string;\r\n\r\n    /**\r\n     * The specific quote in the file.\r\n     */\r\n    quote?: string;\r\n  }\r\n}\r\n\r\n/**\r\n * A URL for the file that's generated when the assistant used the\r\n * `code_interpreter` tool to generate a file.\r\n */\r\nexport interface FilePathAnnotation {\r\n  end_index: number;\r\n\r\n  file_path: FilePathAnnotation.FilePath;\r\n\r\n  start_index: number;\r\n\r\n  /**\r\n   * The text in the message content that needs to be replaced.\r\n   */\r\n  text: string;\r\n\r\n  /**\r\n   * Always `file_path`.\r\n   */\r\n  type: 'file_path';\r\n}\r\n\r\nexport namespace FilePathAnnotation {\r\n  export interface FilePath {\r\n    /**\r\n     * The ID of the file that was generated.\r\n     */\r\n    file_id: string;\r\n  }\r\n}\r\n\r\n/**\r\n * A URL for the file that's generated when the assistant used the\r\n * `code_interpreter` tool to generate a file.\r\n */\r\nexport interface FilePathDeltaAnnotation {\r\n  /**\r\n   * The index of the annotation in the text content part.\r\n   */\r\n  index: number;\r\n\r\n  /**\r\n   * Always `file_path`.\r\n   */\r\n  type: 'file_path';\r\n\r\n  end_index?: number;\r\n\r\n  file_path?: FilePathDeltaAnnotation.FilePath;\r\n\r\n  start_index?: number;\r\n\r\n  /**\r\n   * The text in the message content that needs to be replaced.\r\n   */\r\n  text?: string;\r\n}\r\n\r\nexport namespace FilePathDeltaAnnotation {\r\n  export interface FilePath {\r\n    /**\r\n     * The ID of the file that was generated.\r\n     */\r\n    file_id?: string;\r\n  }\r\n}\r\n\r\nexport interface ImageFile {\r\n  /**\r\n   * The [File](https://platform.openai.com/docs/api-reference/files) ID of the image\r\n   * in the message content. Set `purpose=\"vision\"` when uploading the File if you\r\n   * need to later display the file content.\r\n   */\r\n  file_id: string;\r\n\r\n  /**\r\n   * Specifies the detail level of the image if specified by the user. `low` uses\r\n   * fewer tokens, you can opt in to high resolution using `high`.\r\n   */\r\n  detail?: 'auto' | 'low' | 'high';\r\n}\r\n\r\n/**\r\n * References an image [File](https://platform.openai.com/docs/api-reference/files)\r\n * in the content of a message.\r\n */\r\nexport interface ImageFileContentBlock {\r\n  image_file: ImageFile;\r\n\r\n  /**\r\n   * Always `image_file`.\r\n   */\r\n  type: 'image_file';\r\n}\r\n\r\nexport interface ImageFileDelta {\r\n  /**\r\n   * Specifies the detail level of the image if specified by the user. `low` uses\r\n   * fewer tokens, you can opt in to high resolution using `high`.\r\n   */\r\n  detail?: 'auto' | 'low' | 'high';\r\n\r\n  /**\r\n   * The [File](https://platform.openai.com/docs/api-reference/files) ID of the image\r\n   * in the message content. Set `purpose=\"vision\"` when uploading the File if you\r\n   * need to later display the file content.\r\n   */\r\n  file_id?: string;\r\n}\r\n\r\n/**\r\n * References an image [File](https://platform.openai.com/docs/api-reference/files)\r\n * in the content of a message.\r\n */\r\nexport interface ImageFileDeltaBlock {\r\n  /**\r\n   * The index of the content part in the message.\r\n   */\r\n  index: number;\r\n\r\n  /**\r\n   * Always `image_file`.\r\n   */\r\n  type: 'image_file';\r\n\r\n  image_file?: ImageFileDelta;\r\n}\r\n\r\nexport interface ImageURL {\r\n  /**\r\n   * The external URL of the image, must be a supported image types: jpeg, jpg, png,\r\n   * gif, webp.\r\n   */\r\n  url: string;\r\n\r\n  /**\r\n   * Specifies the detail level of the image. `low` uses fewer tokens, you can opt in\r\n   * to high resolution using `high`. Default value is `auto`\r\n   */\r\n  detail?: 'auto' | 'low' | 'high';\r\n}\r\n\r\n/**\r\n * References an image URL in the content of a message.\r\n */\r\nexport interface ImageURLContentBlock {\r\n  image_url: ImageURL;\r\n\r\n  /**\r\n   * The type of the content part.\r\n   */\r\n  type: 'image_url';\r\n}\r\n\r\nexport interface ImageURLDelta {\r\n  /**\r\n   * Specifies the detail level of the image. `low` uses fewer tokens, you can opt in\r\n   * to high resolution using `high`.\r\n   */\r\n  detail?: 'auto' | 'low' | 'high';\r\n\r\n  /**\r\n   * The URL of the image, must be a supported image types: jpeg, jpg, png, gif,\r\n   * webp.\r\n   */\r\n  url?: string;\r\n}\r\n\r\n/**\r\n * References an image URL in the content of a message.\r\n */\r\nexport interface ImageURLDeltaBlock {\r\n  /**\r\n   * The index of the content part in the message.\r\n   */\r\n  index: number;\r\n\r\n  /**\r\n   * Always `image_url`.\r\n   */\r\n  type: 'image_url';\r\n\r\n  image_url?: ImageURLDelta;\r\n}\r\n\r\n/**\r\n * Represents a message within a\r\n * [thread](https://platform.openai.com/docs/api-reference/threads).\r\n */\r\nexport interface Message {\r\n  /**\r\n   * The identifier, which can be referenced in API endpoints.\r\n   */\r\n  id: string;\r\n\r\n  /**\r\n   * If applicable, the ID of the\r\n   * [assistant](https://platform.openai.com/docs/api-reference/assistants) that\r\n   * authored this message.\r\n   */\r\n  assistant_id: string | null;\r\n\r\n  /**\r\n   * A list of files attached to the message, and the tools they were added to.\r\n   */\r\n  attachments: Array<Message.Attachment> | null;\r\n\r\n  /**\r\n   * The Unix timestamp (in seconds) for when the message was completed.\r\n   */\r\n  completed_at: number | null;\r\n\r\n  /**\r\n   * The content of the message in array of text and/or images.\r\n   */\r\n  content: Array<MessageContent>;\r\n\r\n  /**\r\n   * The Unix timestamp (in seconds) for when the message was created.\r\n   */\r\n  created_at: number;\r\n\r\n  /**\r\n   * The Unix timestamp (in seconds) for when the message was marked as incomplete.\r\n   */\r\n  incomplete_at: number | null;\r\n\r\n  /**\r\n   * On an incomplete message, details about why the message is incomplete.\r\n   */\r\n  incomplete_details: Message.IncompleteDetails | null;\r\n\r\n  /**\r\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\r\n   * for storing additional information about the object in a structured format, and\r\n   * querying for objects via API or the dashboard.\r\n   *\r\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\r\n   * a maximum length of 512 characters.\r\n   */\r\n  metadata: Shared.Metadata | null;\r\n\r\n  /**\r\n   * The object type, which is always `thread.message`.\r\n   */\r\n  object: 'thread.message';\r\n\r\n  /**\r\n   * The entity that produced the message. One of `user` or `assistant`.\r\n   */\r\n  role: 'user' | 'assistant';\r\n\r\n  /**\r\n   * The ID of the [run](https://platform.openai.com/docs/api-reference/runs)\r\n   * associated with the creation of this message. Value is `null` when messages are\r\n   * created manually using the create message or create thread endpoints.\r\n   */\r\n  run_id: string | null;\r\n\r\n  /**\r\n   * The status of the message, which can be either `in_progress`, `incomplete`, or\r\n   * `completed`.\r\n   */\r\n  status: 'in_progress' | 'incomplete' | 'completed';\r\n\r\n  /**\r\n   * The [thread](https://platform.openai.com/docs/api-reference/threads) ID that\r\n   * this message belongs to.\r\n   */\r\n  thread_id: string;\r\n}\r\n\r\nexport namespace Message {\r\n  export interface Attachment {\r\n    /**\r\n     * The ID of the file to attach to the message.\r\n     */\r\n    file_id?: string;\r\n\r\n    /**\r\n     * The tools to add this file to.\r\n     */\r\n    tools?: Array<AssistantsAPI.CodeInterpreterTool | Attachment.AssistantToolsFileSearchTypeOnly>;\r\n  }\r\n\r\n  export namespace Attachment {\r\n    export interface AssistantToolsFileSearchTypeOnly {\r\n      /**\r\n       * The type of tool being defined: `file_search`\r\n       */\r\n      type: 'file_search';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On an incomplete message, details about why the message is incomplete.\r\n   */\r\n  export interface IncompleteDetails {\r\n    /**\r\n     * The reason the message is incomplete.\r\n     */\r\n    reason: 'content_filter' | 'max_tokens' | 'run_cancelled' | 'run_expired' | 'run_failed';\r\n  }\r\n}\r\n\r\n/**\r\n * References an image [File](https://platform.openai.com/docs/api-reference/files)\r\n * in the content of a message.\r\n */\r\nexport type MessageContent =\r\n  | ImageFileContentBlock\r\n  | ImageURLContentBlock\r\n  | TextContentBlock\r\n  | RefusalContentBlock;\r\n\r\n/**\r\n * References an image [File](https://platform.openai.com/docs/api-reference/files)\r\n * in the content of a message.\r\n */\r\nexport type MessageContentDelta =\r\n  | ImageFileDeltaBlock\r\n  | TextDeltaBlock\r\n  | RefusalDeltaBlock\r\n  | ImageURLDeltaBlock;\r\n\r\n/**\r\n * References an image [File](https://platform.openai.com/docs/api-reference/files)\r\n * in the content of a message.\r\n */\r\nexport type MessageContentPartParam = ImageFileContentBlock | ImageURLContentBlock | TextContentBlockParam;\r\n\r\nexport interface MessageDeleted {\r\n  id: string;\r\n\r\n  deleted: boolean;\r\n\r\n  object: 'thread.message.deleted';\r\n}\r\n\r\n/**\r\n * The delta containing the fields that have changed on the Message.\r\n */\r\nexport interface MessageDelta {\r\n  /**\r\n   * The content of the message in array of text and/or images.\r\n   */\r\n  content?: Array<MessageContentDelta>;\r\n\r\n  /**\r\n   * The entity that produced the message. One of `user` or `assistant`.\r\n   */\r\n  role?: 'user' | 'assistant';\r\n}\r\n\r\n/**\r\n * Represents a message delta i.e. any changed fields on a message during\r\n * streaming.\r\n */\r\nexport interface MessageDeltaEvent {\r\n  /**\r\n   * The identifier of the message, which can be referenced in API endpoints.\r\n   */\r\n  id: string;\r\n\r\n  /**\r\n   * The delta containing the fields that have changed on the Message.\r\n   */\r\n  delta: MessageDelta;\r\n\r\n  /**\r\n   * The object type, which is always `thread.message.delta`.\r\n   */\r\n  object: 'thread.message.delta';\r\n}\r\n\r\n/**\r\n * The refusal content generated by the assistant.\r\n */\r\nexport interface RefusalContentBlock {\r\n  refusal: string;\r\n\r\n  /**\r\n   * Always `refusal`.\r\n   */\r\n  type: 'refusal';\r\n}\r\n\r\n/**\r\n * The refusal content that is part of a message.\r\n */\r\nexport interface RefusalDeltaBlock {\r\n  /**\r\n   * The index of the refusal part in the message.\r\n   */\r\n  index: number;\r\n\r\n  /**\r\n   * Always `refusal`.\r\n   */\r\n  type: 'refusal';\r\n\r\n  refusal?: string;\r\n}\r\n\r\nexport interface Text {\r\n  annotations: Array<Annotation>;\r\n\r\n  /**\r\n   * The data that makes up the text.\r\n   */\r\n  value: string;\r\n}\r\n\r\n/**\r\n * The text content that is part of a message.\r\n */\r\nexport interface TextContentBlock {\r\n  text: Text;\r\n\r\n  /**\r\n   * Always `text`.\r\n   */\r\n  type: 'text';\r\n}\r\n\r\n/**\r\n * The text content that is part of a message.\r\n */\r\nexport interface TextContentBlockParam {\r\n  /**\r\n   * Text content to be sent to the model\r\n   */\r\n  text: string;\r\n\r\n  /**\r\n   * Always `text`.\r\n   */\r\n  type: 'text';\r\n}\r\n\r\nexport interface TextDelta {\r\n  annotations?: Array<AnnotationDelta>;\r\n\r\n  /**\r\n   * The data that makes up the text.\r\n   */\r\n  value?: string;\r\n}\r\n\r\n/**\r\n * The text content that is part of a message.\r\n */\r\nexport interface TextDeltaBlock {\r\n  /**\r\n   * The index of the content part in the message.\r\n   */\r\n  index: number;\r\n\r\n  /**\r\n   * Always `text`.\r\n   */\r\n  type: 'text';\r\n\r\n  text?: TextDelta;\r\n}\r\n\r\nexport interface MessageCreateParams {\r\n  /**\r\n   * The text contents of the message.\r\n   */\r\n  content: string | Array<MessageContentPartParam>;\r\n\r\n  /**\r\n   * The role of the entity that is creating the message. Allowed values include:\r\n   *\r\n   * - `user`: Indicates the message is sent by an actual user and should be used in\r\n   *   most cases to represent user-generated messages.\r\n   * - `assistant`: Indicates the message is generated by the assistant. Use this\r\n   *   value to insert messages from the assistant into the conversation.\r\n   */\r\n  role: 'user' | 'assistant';\r\n\r\n  /**\r\n   * A list of files attached to the message, and the tools they should be added to.\r\n   */\r\n  attachments?: Array<MessageCreateParams.Attachment> | null;\r\n\r\n  /**\r\n   * Set of 16 key-value pairs that can be attached to an object. This can be useful\r\n   * for storing additional information about the object in a structured format, and\r\n   * querying for objects via API or the dashboard.\r\n   *\r\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\r\n   * a maximum length of 512 characters.\r\n   */\r\n  metadata?: Shared.Metadata | null;\r\n}\r\n\r\nexport namespace MessageCreateParams {\r\n  export interface Attachment {\r\n    /**\r\n     * The ID of the file to attach to the message.\r\n     */\r\n    file_id?: string;\r\n\r\n    /**\r\n     * The tools to add this file to.\r\n     */\r\n    tools?: Array<AssistantsAPI.CodeInterpreterTool | Attachment.FileSearch>;\r\n  }\r\n\r\n  export namespace Attachment {\r\n    export interface FileSearch {\r\n      /**\r\n       * The type of tool being defined: `file_search`\r\n       */\r\n      type: 'file_search';\r\n    }\r\n  }\r\n}\r\n\r\nexport interface MessageRetrieveParams {\r\n  /**\r\n   * The ID of the [thread](https://platform.openai.com/docs/api-reference/threads)\r\n   * to which this message belongs.\r\n   */\r\n  thread_id: string;\r\n}\r\n\r\nexport interface MessageUpdateParams {\r\n  /**\r\n   * Path param: The ID of the thread to which this message belongs.\r\n   */\r\n  thread_id: string;\r\n\r\n  /**\r\n   * Body param: Set of 16 key-value pairs that can be attached to an object. This\r\n   * can be useful for storing additional information about the object in a\r\n   * structured format, and querying for objects via API or the dashboard.\r\n   *\r\n   * Keys are strings with a maximum length of 64 characters. Values are strings with\r\n   * a maximum length of 512 characters.\r\n   */\r\n  metadata?: Shared.Metadata | null;\r\n}\r\n\r\nexport interface MessageListParams extends CursorPageParams {\r\n  /**\r\n   * A cursor for use in pagination. `before` is an object ID that defines your place\r\n   * in the list. For instance, if you make a list request and receive 100 objects,\r\n   * starting with obj_foo, your subsequent call can include before=obj_foo in order\r\n   * to fetch the previous page of the list.\r\n   */\r\n  before?: string;\r\n\r\n  /**\r\n   * Sort order by the `created_at` timestamp of the objects. `asc` for ascending\r\n   * order and `desc` for descending order.\r\n   */\r\n  order?: 'asc' | 'desc';\r\n\r\n  /**\r\n   * Filter messages by the run ID that generated them.\r\n   */\r\n  run_id?: string;\r\n}\r\n\r\nexport interface MessageDeleteParams {\r\n  /**\r\n   * The ID of the thread to which this message belongs.\r\n   */\r\n  thread_id: string;\r\n}\r\n\r\nexport declare namespace Messages {\r\n  export {\r\n    type Annotation as Annotation,\r\n    type AnnotationDelta as AnnotationDelta,\r\n    type FileCitationAnnotation as FileCitationAnnotation,\r\n    type FileCitationDeltaAnnotation as FileCitationDeltaAnnotation,\r\n    type FilePathAnnotation as FilePathAnnotation,\r\n    type FilePathDeltaAnnotation as FilePathDeltaAnnotation,\r\n    type ImageFile as ImageFile,\r\n    type ImageFileContentBlock as ImageFileContentBlock,\r\n    type ImageFileDelta as ImageFileDelta,\r\n    type ImageFileDeltaBlock as ImageFileDeltaBlock,\r\n    type ImageURL as ImageURL,\r\n    type ImageURLContentBlock as ImageURLContentBlock,\r\n    type ImageURLDelta as ImageURLDelta,\r\n    type ImageURLDeltaBlock as ImageURLDeltaBlock,\r\n    type Message as Message,\r\n    type MessageContent as MessageContent,\r\n    type MessageContentDelta as MessageContentDelta,\r\n    type MessageContentPartParam as MessageContentPartParam,\r\n    type MessageDeleted as MessageDeleted,\r\n    type MessageDelta as MessageDelta,\r\n    type MessageDeltaEvent as MessageDeltaEvent,\r\n    type RefusalContentBlock as RefusalContentBlock,\r\n    type RefusalDeltaBlock as RefusalDeltaBlock,\r\n    type Text as Text,\r\n    type TextContentBlock as TextContentBlock,\r\n    type TextContentBlockParam as TextContentBlockParam,\r\n    type TextDelta as TextDelta,\r\n    type TextDeltaBlock as TextDeltaBlock,\r\n    type MessagesPage as MessagesPage,\r\n    type MessageCreateParams as MessageCreateParams,\r\n    type MessageRetrieveParams as MessageRetrieveParams,\r\n    type MessageUpdateParams as MessageUpdateParams,\r\n    type MessageListParams as MessageListParams,\r\n    type MessageDeleteParams as MessageDeleteParams,\r\n  };\r\n}\r\n"],"mappings":"AAAA;SAESA,WAAW,QAAE;SAIbC,UAAU,QAAsC;SAChDC,YAAY,QAAE;SAEdC,IAAI,QAAE;AAEf;;;AAGA,OAAM,MAAOC,QAAS,SAAQJ,WAAW;EACvC;;;;;EAKAK,MAAMA,CAACC,QAAgB,EAAEC,IAAyB,EAAEC,OAAwB;IAC1E,OAAO,IAAI,CAACC,OAAO,CAACC,IAAI,CAACP,IAAI,YAAYG,QAAQ,WAAW,EAAE;MAC5DC,IAAI;MACJ,GAAGC,OAAO;MACVG,OAAO,EAAET,YAAY,CAAC,CAAC;QAAE,aAAa,EAAE;MAAe,CAAE,EAAEM,OAAO,EAAEG,OAAO,CAAC;KAC7E,CAAC;EACJ;EAEA;;;;;EAKAC,QAAQA,CAACC,SAAiB,EAAEC,MAA6B,EAAEN,OAAwB;IACjF,MAAM;MAAEO;IAAS,CAAE,GAAGD,MAAM;IAC5B,OAAO,IAAI,CAACL,OAAO,CAACO,GAAG,CAACb,IAAI,YAAYY,SAAS,aAAaF,SAAS,EAAE,EAAE;MACzE,GAAGL,OAAO;MACVG,OAAO,EAAET,YAAY,CAAC,CAAC;QAAE,aAAa,EAAE;MAAe,CAAE,EAAEM,OAAO,EAAEG,OAAO,CAAC;KAC7E,CAAC;EACJ;EAEA;;;;;EAKAM,MAAMA,CAACJ,SAAiB,EAAEC,MAA2B,EAAEN,OAAwB;IAC7E,MAAM;MAAEO,SAAS;MAAE,GAAGR;IAAI,CAAE,GAAGO,MAAM;IACrC,OAAO,IAAI,CAACL,OAAO,CAACC,IAAI,CAACP,IAAI,YAAYY,SAAS,aAAaF,SAAS,EAAE,EAAE;MAC1EN,IAAI;MACJ,GAAGC,OAAO;MACVG,OAAO,EAAET,YAAY,CAAC,CAAC;QAAE,aAAa,EAAE;MAAe,CAAE,EAAEM,OAAO,EAAEG,OAAO,CAAC;KAC7E,CAAC;EACJ;EAEA;;;;;EAKAO,IAAIA,CACFZ,QAAgB,EAChBa,KAAA,GAA8C,EAAE,EAChDX,OAAwB;IAExB,OAAO,IAAI,CAACC,OAAO,CAACW,UAAU,CAACjB,IAAI,YAAYG,QAAQ,WAAW,EAAEL,UAAmB,EAAE;MACvFkB,KAAK;MACL,GAAGX,OAAO;MACVG,OAAO,EAAET,YAAY,CAAC,CAAC;QAAE,aAAa,EAAE;MAAe,CAAE,EAAEM,OAAO,EAAEG,OAAO,CAAC;KAC7E,CAAC;EACJ;EAEA;;;;;EAKAU,MAAMA,CACJR,SAAiB,EACjBC,MAA2B,EAC3BN,OAAwB;IAExB,MAAM;MAAEO;IAAS,CAAE,GAAGD,MAAM;IAC5B,OAAO,IAAI,CAACL,OAAO,CAACY,MAAM,CAAClB,IAAI,YAAYY,SAAS,aAAaF,SAAS,EAAE,EAAE;MAC5E,GAAGL,OAAO;MACVG,OAAO,EAAET,YAAY,CAAC,CAAC;QAAE,aAAa,EAAE;MAAe,CAAE,EAAEM,OAAO,EAAEG,OAAO,CAAC;KAC7E,CAAC;EACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}